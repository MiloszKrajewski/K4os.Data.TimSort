// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln or .csproj file. Will use current directory D:\Projects\K4os.Data.TimSort to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\a97f0d89-daee-4746-8089-c0a434541b6d
// command took 1.02s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\a97f0d89-daee-4746-8089-c0a434541b6d
// command took 13.47s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\a97f0d89-daee-4746-8089-c0a434541b6d
// command took 1.95s and exited with 0
// ***** Done, took 00:00:16 (16.52 sec)   *****
// Found 2 benchmarks:
//   QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
//   QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]

// **************************
// Benchmark: QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "a97f0d89-daee-4746-8089-c0a434541b6d.dll" --benchmarkName "Benchmarks.QuickSortTuning.Default(Size: 100000, Order: Random)" --job "Default" --benchmarkId 0 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\a97f0d89-daee-4746-8089-c0a434541b6d\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 190900.00 ns, 190.9000 us/op
WorkloadJitting  1: 1 op, 6929800.00 ns, 6.9298 ms/op

OverheadJitting  2: 16 op, 155000.00 ns, 9.6875 us/op
WorkloadJitting  2: 16 op, 99969600.00 ns, 6.2481 ms/op

WorkloadPilot    1: 16 op, 98567600.00 ns, 6.1605 ms/op
WorkloadPilot    2: 32 op, 199109000.00 ns, 6.2222 ms/op
WorkloadPilot    3: 64 op, 395485600.00 ns, 6.1795 ms/op
WorkloadPilot    4: 128 op, 786949400.00 ns, 6.1480 ms/op

OverheadWarmup   1: 128 op, 1700.00 ns, 13.2812 ns/op
OverheadWarmup   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   3: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   5: 128 op, 700.00 ns, 5.4688 ns/op
OverheadWarmup   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   7: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   8: 128 op, 500.00 ns, 3.9062 ns/op

OverheadActual   1: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   2: 128 op, 900.00 ns, 7.0312 ns/op
OverheadActual   3: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   5: 128 op, 800.00 ns, 6.2500 ns/op
OverheadActual   6: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   7: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   8: 128 op, 800.00 ns, 6.2500 ns/op
OverheadActual   9: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  10: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  11: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  12: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  13: 128 op, 800.00 ns, 6.2500 ns/op
OverheadActual  14: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual  15: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  16: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  17: 128 op, 800.00 ns, 6.2500 ns/op
OverheadActual  18: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  19: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadActual  20: 128 op, 700.00 ns, 5.4688 ns/op

WorkloadWarmup   1: 128 op, 783956500.00 ns, 6.1247 ms/op
WorkloadWarmup   2: 128 op, 785074600.00 ns, 6.1334 ms/op
WorkloadWarmup   3: 128 op, 783021300.00 ns, 6.1174 ms/op
WorkloadWarmup   4: 128 op, 786327600.00 ns, 6.1432 ms/op
WorkloadWarmup   5: 128 op, 782668900.00 ns, 6.1146 ms/op
WorkloadWarmup   6: 128 op, 783555600.00 ns, 6.1215 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 783272700.00 ns, 6.1193 ms/op
WorkloadActual   2: 128 op, 783536800.00 ns, 6.1214 ms/op
WorkloadActual   3: 128 op, 783751000.00 ns, 6.1231 ms/op
WorkloadActual   4: 128 op, 782358600.00 ns, 6.1122 ms/op
WorkloadActual   5: 128 op, 782739800.00 ns, 6.1152 ms/op
WorkloadActual   6: 128 op, 782998600.00 ns, 6.1172 ms/op
WorkloadActual   7: 128 op, 782782900.00 ns, 6.1155 ms/op
WorkloadActual   8: 128 op, 782183000.00 ns, 6.1108 ms/op
WorkloadActual   9: 128 op, 782919100.00 ns, 6.1166 ms/op
WorkloadActual  10: 128 op, 781724800.00 ns, 6.1072 ms/op
WorkloadActual  11: 128 op, 782360400.00 ns, 6.1122 ms/op
WorkloadActual  12: 128 op, 782811400.00 ns, 6.1157 ms/op
WorkloadActual  13: 128 op, 782546100.00 ns, 6.1136 ms/op
WorkloadActual  14: 128 op, 783381000.00 ns, 6.1202 ms/op
WorkloadActual  15: 128 op, 781965200.00 ns, 6.1091 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 783272100.00 ns, 6.1193 ms/op
WorkloadResult   2: 128 op, 783536200.00 ns, 6.1214 ms/op
WorkloadResult   3: 128 op, 783750400.00 ns, 6.1231 ms/op
WorkloadResult   4: 128 op, 782358000.00 ns, 6.1122 ms/op
WorkloadResult   5: 128 op, 782739200.00 ns, 6.1151 ms/op
WorkloadResult   6: 128 op, 782998000.00 ns, 6.1172 ms/op
WorkloadResult   7: 128 op, 782782300.00 ns, 6.1155 ms/op
WorkloadResult   8: 128 op, 782182400.00 ns, 6.1108 ms/op
WorkloadResult   9: 128 op, 782918500.00 ns, 6.1166 ms/op
WorkloadResult  10: 128 op, 781724200.00 ns, 6.1072 ms/op
WorkloadResult  11: 128 op, 782359800.00 ns, 6.1122 ms/op
WorkloadResult  12: 128 op, 782810800.00 ns, 6.1157 ms/op
WorkloadResult  13: 128 op, 782545500.00 ns, 6.1136 ms/op
WorkloadResult  14: 128 op, 783380400.00 ns, 6.1202 ms/op
WorkloadResult  15: 128 op, 781964600.00 ns, 6.1091 ms/op

// AfterAll
// Benchmark Process 12264 has exited with code 0.

Mean = 6.115 ms, StdErr = 0.001 ms (0.02%), N = 15, StdDev = 0.005 ms
Min = 6.107 ms, Q1 = 6.112 ms, Median = 6.115 ms, Q3 = 6.118 ms, Max = 6.123 ms
IQR = 0.006 ms, LowerFence = 6.103 ms, UpperFence = 6.127 ms
ConfidenceInterval = [6.110 ms; 6.120 ms] (CI 99.9%), Margin = 0.005 ms (0.08% of Mean)
Skewness = -0.01, Kurtosis = 1.91, MValue = 2

// **************************
// Benchmark: QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "a97f0d89-daee-4746-8089-c0a434541b6d.dll" --benchmarkName "Benchmarks.QuickSortTuning.Mine(Size: 100000, Order: Random)" --job "Default" --benchmarkId 1 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\a97f0d89-daee-4746-8089-c0a434541b6d\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 168100.00 ns, 168.1000 us/op
WorkloadJitting  1: 1 op, 25503000.00 ns, 25.5030 ms/op

OverheadJitting  2: 16 op, 176800.00 ns, 11.0500 us/op
WorkloadJitting  2: 16 op, 102452000.00 ns, 6.4032 ms/op

WorkloadPilot    1: 16 op, 101948800.00 ns, 6.3718 ms/op
WorkloadPilot    2: 32 op, 203790800.00 ns, 6.3685 ms/op
WorkloadPilot    3: 64 op, 407552400.00 ns, 6.3680 ms/op
WorkloadPilot    4: 128 op, 816479500.00 ns, 6.3787 ms/op

OverheadWarmup   1: 128 op, 1200.00 ns, 9.3750 ns/op
OverheadWarmup   2: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   3: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   4: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   5: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   6: 128 op, 800.00 ns, 6.2500 ns/op
OverheadWarmup   7: 128 op, 500.00 ns, 3.9062 ns/op

OverheadActual   1: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   2: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   3: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   4: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   5: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   6: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   7: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   8: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   9: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  10: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  11: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  12: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  13: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  14: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  15: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  16: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual  17: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  18: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  19: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  20: 128 op, 1000.00 ns, 7.8125 ns/op

WorkloadWarmup   1: 128 op, 816406300.00 ns, 6.3782 ms/op
WorkloadWarmup   2: 128 op, 815138600.00 ns, 6.3683 ms/op
WorkloadWarmup   3: 128 op, 814603000.00 ns, 6.3641 ms/op
WorkloadWarmup   4: 128 op, 814799300.00 ns, 6.3656 ms/op
WorkloadWarmup   5: 128 op, 815166200.00 ns, 6.3685 ms/op
WorkloadWarmup   6: 128 op, 815712900.00 ns, 6.3728 ms/op
WorkloadWarmup   7: 128 op, 815448700.00 ns, 6.3707 ms/op
WorkloadWarmup   8: 128 op, 816390200.00 ns, 6.3780 ms/op
WorkloadWarmup   9: 128 op, 814911200.00 ns, 6.3665 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 815888000.00 ns, 6.3741 ms/op
WorkloadActual   2: 128 op, 814877200.00 ns, 6.3662 ms/op
WorkloadActual   3: 128 op, 816190800.00 ns, 6.3765 ms/op
WorkloadActual   4: 128 op, 816968800.00 ns, 6.3826 ms/op
WorkloadActual   5: 128 op, 815361200.00 ns, 6.3700 ms/op
WorkloadActual   6: 128 op, 815495100.00 ns, 6.3711 ms/op
WorkloadActual   7: 128 op, 815313500.00 ns, 6.3696 ms/op
WorkloadActual   8: 128 op, 816254900.00 ns, 6.3770 ms/op
WorkloadActual   9: 128 op, 815951100.00 ns, 6.3746 ms/op
WorkloadActual  10: 128 op, 815572900.00 ns, 6.3717 ms/op
WorkloadActual  11: 128 op, 815997500.00 ns, 6.3750 ms/op
WorkloadActual  12: 128 op, 815689100.00 ns, 6.3726 ms/op
WorkloadActual  13: 128 op, 814747600.00 ns, 6.3652 ms/op
WorkloadActual  14: 128 op, 814907100.00 ns, 6.3665 ms/op
WorkloadActual  15: 128 op, 815293400.00 ns, 6.3695 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 815887500.00 ns, 6.3741 ms/op
WorkloadResult   2: 128 op, 814876700.00 ns, 6.3662 ms/op
WorkloadResult   3: 128 op, 816190300.00 ns, 6.3765 ms/op
WorkloadResult   4: 128 op, 816968300.00 ns, 6.3826 ms/op
WorkloadResult   5: 128 op, 815360700.00 ns, 6.3700 ms/op
WorkloadResult   6: 128 op, 815494600.00 ns, 6.3711 ms/op
WorkloadResult   7: 128 op, 815313000.00 ns, 6.3696 ms/op
WorkloadResult   8: 128 op, 816254400.00 ns, 6.3770 ms/op
WorkloadResult   9: 128 op, 815950600.00 ns, 6.3746 ms/op
WorkloadResult  10: 128 op, 815572400.00 ns, 6.3717 ms/op
WorkloadResult  11: 128 op, 815997000.00 ns, 6.3750 ms/op
WorkloadResult  12: 128 op, 815688600.00 ns, 6.3726 ms/op
WorkloadResult  13: 128 op, 814747100.00 ns, 6.3652 ms/op
WorkloadResult  14: 128 op, 814906600.00 ns, 6.3665 ms/op
WorkloadResult  15: 128 op, 815292900.00 ns, 6.3695 ms/op

// AfterAll
// Benchmark Process 28020 has exited with code 0.

Mean = 6.372 ms, StdErr = 0.001 ms (0.02%), N = 15, StdDev = 0.005 ms
Min = 6.365 ms, Q1 = 6.370 ms, Median = 6.372 ms, Q3 = 6.375 ms, Max = 6.383 ms
IQR = 0.005 ms, LowerFence = 6.362 ms, UpperFence = 6.383 ms
ConfidenceInterval = [6.367 ms; 6.377 ms] (CI 99.9%), Margin = 0.005 ms (0.08% of Mean)
Skewness = 0.4, Kurtosis = 2.48, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.html

// * Detailed results *
QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.115 ms, StdErr = 0.001 ms (0.02%), N = 15, StdDev = 0.005 ms
Min = 6.107 ms, Q1 = 6.112 ms, Median = 6.115 ms, Q3 = 6.118 ms, Max = 6.123 ms
IQR = 0.006 ms, LowerFence = 6.103 ms, UpperFence = 6.127 ms
ConfidenceInterval = [6.110 ms; 6.120 ms] (CI 99.9%), Margin = 0.005 ms (0.08% of Mean)
Skewness = -0.01, Kurtosis = 1.91, MValue = 2
-------------------- Histogram --------------------
[6.105 ms ; 6.125 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.372 ms, StdErr = 0.001 ms (0.02%), N = 15, StdDev = 0.005 ms
Min = 6.365 ms, Q1 = 6.370 ms, Median = 6.372 ms, Q3 = 6.375 ms, Max = 6.383 ms
IQR = 0.005 ms, LowerFence = 6.362 ms, UpperFence = 6.383 ms
ConfidenceInterval = [6.367 ms; 6.377 ms] (CI 99.9%), Margin = 0.005 ms (0.08% of Mean)
Skewness = 0.4, Kurtosis = 2.48, MValue = 2
-------------------- Histogram --------------------
[6.363 ms ; 6.385 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19043.1348 (21H1/May2021Update)
AMD Ryzen 5 3600, 1 CPU, 12 logical and 6 physical cores
.NET SDK=5.0.300
  [Host]     : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
  DefaultJob : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT


|  Method |   Size |  Order |     Mean |     Error |    StdDev | Ratio |
|-------- |------- |------- |---------:|----------:|----------:|------:|
| Default | 100000 | Random | 6.115 ms | 0.0049 ms | 0.0045 ms |  1.00 |
|    Mine | 100000 | Random | 6.372 ms | 0.0050 ms | 0.0047 ms |  1.04 |

// * Legends *
  Size   : Value of the 'Size' parameter
  Order  : Value of the 'Order' parameter
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Ratio  : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:40 (40.11 sec), executed benchmarks: 2

Global total time: 00:00:56 (56.64 sec), executed benchmarks: 2
// * Artifacts cleanup *
