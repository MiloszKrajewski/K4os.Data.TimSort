// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln or .csproj file. Will use current directory D:\Projects\K4os.Data.TimSort to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\845eb1ba-8e6b-4991-9636-36cc54237523
// command took 1.04s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\845eb1ba-8e6b-4991-9636-36cc54237523
// command took 13.51s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\845eb1ba-8e6b-4991-9636-36cc54237523
// command took 1.96s and exited with 0
// ***** Done, took 00:00:16 (16.57 sec)   *****
// Found 2 benchmarks:
//   QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
//   QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]

// **************************
// Benchmark: QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "845eb1ba-8e6b-4991-9636-36cc54237523.dll" --benchmarkName "Benchmarks.QuickSortTuning.Default(Size: 100000, Order: Random)" --job "Default" --benchmarkId 0 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\845eb1ba-8e6b-4991-9636-36cc54237523\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 175500.00 ns, 175.5000 us/op
WorkloadJitting  1: 1 op, 6855700.00 ns, 6.8557 ms/op

OverheadJitting  2: 16 op, 266700.00 ns, 16.6687 us/op
WorkloadJitting  2: 16 op, 100521100.00 ns, 6.2826 ms/op

WorkloadPilot    1: 16 op, 99408500.00 ns, 6.2130 ms/op
WorkloadPilot    2: 32 op, 200433100.00 ns, 6.2635 ms/op
WorkloadPilot    3: 64 op, 395461300.00 ns, 6.1791 ms/op
WorkloadPilot    4: 128 op, 786986900.00 ns, 6.1483 ms/op

OverheadWarmup   1: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadWarmup   2: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   3: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   4: 128 op, 800.00 ns, 6.2500 ns/op
OverheadWarmup   5: 128 op, 700.00 ns, 5.4688 ns/op
OverheadWarmup   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   7: 128 op, 500.00 ns, 3.9062 ns/op

OverheadActual   1: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   2: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   3: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   4: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   5: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   6: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   7: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   8: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   9: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  10: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  11: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  12: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  13: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  14: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  15: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  16: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  17: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  18: 128 op, 800.00 ns, 6.2500 ns/op
OverheadActual  19: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  20: 128 op, 1000.00 ns, 7.8125 ns/op

WorkloadWarmup   1: 128 op, 783073800.00 ns, 6.1178 ms/op
WorkloadWarmup   2: 128 op, 786660800.00 ns, 6.1458 ms/op
WorkloadWarmup   3: 128 op, 786263100.00 ns, 6.1427 ms/op
WorkloadWarmup   4: 128 op, 784300800.00 ns, 6.1273 ms/op
WorkloadWarmup   5: 128 op, 785228100.00 ns, 6.1346 ms/op
WorkloadWarmup   6: 128 op, 783207800.00 ns, 6.1188 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 783169000.00 ns, 6.1185 ms/op
WorkloadActual   2: 128 op, 783117900.00 ns, 6.1181 ms/op
WorkloadActual   3: 128 op, 784268000.00 ns, 6.1271 ms/op
WorkloadActual   4: 128 op, 782750500.00 ns, 6.1152 ms/op
WorkloadActual   5: 128 op, 782666400.00 ns, 6.1146 ms/op
WorkloadActual   6: 128 op, 782986200.00 ns, 6.1171 ms/op
WorkloadActual   7: 128 op, 782833700.00 ns, 6.1159 ms/op
WorkloadActual   8: 128 op, 783358300.00 ns, 6.1200 ms/op
WorkloadActual   9: 128 op, 784127000.00 ns, 6.1260 ms/op
WorkloadActual  10: 128 op, 784674600.00 ns, 6.1303 ms/op
WorkloadActual  11: 128 op, 783985400.00 ns, 6.1249 ms/op
WorkloadActual  12: 128 op, 782615200.00 ns, 6.1142 ms/op
WorkloadActual  13: 128 op, 782494300.00 ns, 6.1132 ms/op
WorkloadActual  14: 128 op, 784294500.00 ns, 6.1273 ms/op
WorkloadActual  15: 128 op, 783388700.00 ns, 6.1202 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 783168500.00 ns, 6.1185 ms/op
WorkloadResult   2: 128 op, 783117400.00 ns, 6.1181 ms/op
WorkloadResult   3: 128 op, 784267500.00 ns, 6.1271 ms/op
WorkloadResult   4: 128 op, 782750000.00 ns, 6.1152 ms/op
WorkloadResult   5: 128 op, 782665900.00 ns, 6.1146 ms/op
WorkloadResult   6: 128 op, 782985700.00 ns, 6.1171 ms/op
WorkloadResult   7: 128 op, 782833200.00 ns, 6.1159 ms/op
WorkloadResult   8: 128 op, 783357800.00 ns, 6.1200 ms/op
WorkloadResult   9: 128 op, 784126500.00 ns, 6.1260 ms/op
WorkloadResult  10: 128 op, 784674100.00 ns, 6.1303 ms/op
WorkloadResult  11: 128 op, 783984900.00 ns, 6.1249 ms/op
WorkloadResult  12: 128 op, 782614700.00 ns, 6.1142 ms/op
WorkloadResult  13: 128 op, 782493800.00 ns, 6.1132 ms/op
WorkloadResult  14: 128 op, 784294000.00 ns, 6.1273 ms/op
WorkloadResult  15: 128 op, 783388200.00 ns, 6.1202 ms/op

// AfterAll
// Benchmark Process 10172 has exited with code 0.

Mean = 6.120 ms, StdErr = 0.001 ms (0.02%), N = 15, StdDev = 0.006 ms
Min = 6.113 ms, Q1 = 6.116 ms, Median = 6.119 ms, Q3 = 6.125 ms, Max = 6.130 ms
IQR = 0.010 ms, LowerFence = 6.101 ms, UpperFence = 6.140 ms
ConfidenceInterval = [6.114 ms; 6.126 ms] (CI 99.9%), Margin = 0.006 ms (0.10% of Mean)
Skewness = 0.41, Kurtosis = 1.58, MValue = 2

// **************************
// Benchmark: QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "845eb1ba-8e6b-4991-9636-36cc54237523.dll" --benchmarkName "Benchmarks.QuickSortTuning.Mine(Size: 100000, Order: Random)" --job "Default" --benchmarkId 1 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\845eb1ba-8e6b-4991-9636-36cc54237523\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 151900.00 ns, 151.9000 us/op
WorkloadJitting  1: 1 op, 26483400.00 ns, 26.4834 ms/op

OverheadJitting  2: 16 op, 199100.00 ns, 12.4437 us/op
WorkloadJitting  2: 16 op, 104767800.00 ns, 6.5480 ms/op

WorkloadPilot    1: 16 op, 103903300.00 ns, 6.4940 ms/op
WorkloadPilot    2: 32 op, 208382700.00 ns, 6.5120 ms/op
WorkloadPilot    3: 64 op, 416135400.00 ns, 6.5021 ms/op
WorkloadPilot    4: 128 op, 833228000.00 ns, 6.5096 ms/op

OverheadWarmup   1: 128 op, 1200.00 ns, 9.3750 ns/op
OverheadWarmup   2: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   3: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   4: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   5: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   6: 128 op, 400.00 ns, 3.1250 ns/op

OverheadActual   1: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   3: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   4: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   5: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   7: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   8: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   9: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  10: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  11: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  12: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  13: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual  14: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  15: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  16: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  17: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  18: 128 op, 800.00 ns, 6.2500 ns/op
OverheadActual  19: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  20: 128 op, 400.00 ns, 3.1250 ns/op

WorkloadWarmup   1: 128 op, 833778700.00 ns, 6.5139 ms/op
WorkloadWarmup   2: 128 op, 832855700.00 ns, 6.5067 ms/op
WorkloadWarmup   3: 128 op, 832807300.00 ns, 6.5063 ms/op
WorkloadWarmup   4: 128 op, 831784700.00 ns, 6.4983 ms/op
WorkloadWarmup   5: 128 op, 833429400.00 ns, 6.5112 ms/op
WorkloadWarmup   6: 128 op, 834014100.00 ns, 6.5157 ms/op
WorkloadWarmup   7: 128 op, 831905700.00 ns, 6.4993 ms/op
WorkloadWarmup   8: 128 op, 832740700.00 ns, 6.5058 ms/op
WorkloadWarmup   9: 128 op, 832457200.00 ns, 6.5036 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 832642800.00 ns, 6.5050 ms/op
WorkloadActual   2: 128 op, 832686200.00 ns, 6.5054 ms/op
WorkloadActual   3: 128 op, 832925000.00 ns, 6.5072 ms/op
WorkloadActual   4: 128 op, 833358100.00 ns, 6.5106 ms/op
WorkloadActual   5: 128 op, 832080400.00 ns, 6.5006 ms/op
WorkloadActual   6: 128 op, 832807200.00 ns, 6.5063 ms/op
WorkloadActual   7: 128 op, 833191200.00 ns, 6.5093 ms/op
WorkloadActual   8: 128 op, 832586500.00 ns, 6.5046 ms/op
WorkloadActual   9: 128 op, 832516500.00 ns, 6.5040 ms/op
WorkloadActual  10: 128 op, 831918000.00 ns, 6.4994 ms/op
WorkloadActual  11: 128 op, 832832800.00 ns, 6.5065 ms/op
WorkloadActual  12: 128 op, 833939300.00 ns, 6.5152 ms/op
WorkloadActual  13: 128 op, 830796200.00 ns, 6.4906 ms/op
WorkloadActual  14: 128 op, 831292700.00 ns, 6.4945 ms/op
WorkloadActual  15: 128 op, 832880600.00 ns, 6.5069 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 832642350.00 ns, 6.5050 ms/op
WorkloadResult   2: 128 op, 832685750.00 ns, 6.5054 ms/op
WorkloadResult   3: 128 op, 832924550.00 ns, 6.5072 ms/op
WorkloadResult   4: 128 op, 833357650.00 ns, 6.5106 ms/op
WorkloadResult   5: 128 op, 832079950.00 ns, 6.5006 ms/op
WorkloadResult   6: 128 op, 832806750.00 ns, 6.5063 ms/op
WorkloadResult   7: 128 op, 833190750.00 ns, 6.5093 ms/op
WorkloadResult   8: 128 op, 832586050.00 ns, 6.5046 ms/op
WorkloadResult   9: 128 op, 832516050.00 ns, 6.5040 ms/op
WorkloadResult  10: 128 op, 831917550.00 ns, 6.4994 ms/op
WorkloadResult  11: 128 op, 832832350.00 ns, 6.5065 ms/op
WorkloadResult  12: 128 op, 830795750.00 ns, 6.4906 ms/op
WorkloadResult  13: 128 op, 831292250.00 ns, 6.4945 ms/op
WorkloadResult  14: 128 op, 832880150.00 ns, 6.5069 ms/op

// AfterAll
// Benchmark Process 26020 has exited with code 0.

Mean = 6.504 ms, StdErr = 0.001 ms (0.02%), N = 14, StdDev = 0.006 ms
Min = 6.491 ms, Q1 = 6.501 ms, Median = 6.505 ms, Q3 = 6.507 ms, Max = 6.511 ms
IQR = 0.005 ms, LowerFence = 6.494 ms, UpperFence = 6.515 ms
ConfidenceInterval = [6.497 ms; 6.510 ms] (CI 99.9%), Margin = 0.006 ms (0.10% of Mean)
Skewness = -0.99, Kurtosis = 2.93, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.html

// * Detailed results *
QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.120 ms, StdErr = 0.001 ms (0.02%), N = 15, StdDev = 0.006 ms
Min = 6.113 ms, Q1 = 6.116 ms, Median = 6.119 ms, Q3 = 6.125 ms, Max = 6.130 ms
IQR = 0.010 ms, LowerFence = 6.101 ms, UpperFence = 6.140 ms
ConfidenceInterval = [6.114 ms; 6.126 ms] (CI 99.9%), Margin = 0.006 ms (0.10% of Mean)
Skewness = 0.41, Kurtosis = 1.58, MValue = 2
-------------------- Histogram --------------------
[6.110 ms ; 6.133 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.504 ms, StdErr = 0.001 ms (0.02%), N = 14, StdDev = 0.006 ms
Min = 6.491 ms, Q1 = 6.501 ms, Median = 6.505 ms, Q3 = 6.507 ms, Max = 6.511 ms
IQR = 0.005 ms, LowerFence = 6.494 ms, UpperFence = 6.515 ms
ConfidenceInterval = [6.497 ms; 6.510 ms] (CI 99.9%), Margin = 0.006 ms (0.10% of Mean)
Skewness = -0.99, Kurtosis = 2.93, MValue = 2
-------------------- Histogram --------------------
[6.488 ms ; 6.514 ms) | @@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19043.1348 (21H1/May2021Update)
AMD Ryzen 5 3600, 1 CPU, 12 logical and 6 physical cores
.NET SDK=5.0.300
  [Host]     : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
  DefaultJob : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT


|  Method |   Size |  Order |     Mean |     Error |    StdDev | Ratio |
|-------- |------- |------- |---------:|----------:|----------:|------:|
| Default | 100000 | Random | 6.120 ms | 0.0059 ms | 0.0056 ms |  1.00 |
|    Mine | 100000 | Random | 6.504 ms | 0.0063 ms | 0.0056 ms |  1.06 |

// * Hints *
Outliers
  QuickSortTuning.Mine: Default -> 1 outlier  was  removed, 3 outliers were detected (6.49 ms, 6.49 ms, 6.52 ms)

// * Legends *
  Size   : Value of the 'Size' parameter
  Order  : Value of the 'Order' parameter
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Ratio  : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:40 (40.61 sec), executed benchmarks: 2

Global total time: 00:00:57 (57.19 sec), executed benchmarks: 2
// * Artifacts cleanup *
