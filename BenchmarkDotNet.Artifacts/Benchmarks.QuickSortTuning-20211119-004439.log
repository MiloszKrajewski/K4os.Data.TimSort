// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln or .csproj file. Will use current directory D:\Projects\K4os.Data.TimSort to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\d6cff74b-1306-427f-8ac7-590914f0ed3d
// command took 1.01s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\d6cff74b-1306-427f-8ac7-590914f0ed3d
// command took 13.47s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\d6cff74b-1306-427f-8ac7-590914f0ed3d
// command took 1.96s and exited with 0
// ***** Done, took 00:00:16 (16.51 sec)   *****
// Found 2 benchmarks:
//   QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
//   QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]

// **************************
// Benchmark: QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "d6cff74b-1306-427f-8ac7-590914f0ed3d.dll" --benchmarkName "Benchmarks.QuickSortTuning.Default(Size: 100000, Order: Random)" --job "Default" --benchmarkId 0 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\d6cff74b-1306-427f-8ac7-590914f0ed3d\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 169000.00 ns, 169.0000 us/op
WorkloadJitting  1: 1 op, 6916600.00 ns, 6.9166 ms/op

OverheadJitting  2: 16 op, 203600.00 ns, 12.7250 us/op
WorkloadJitting  2: 16 op, 100066400.00 ns, 6.2542 ms/op

WorkloadPilot    1: 16 op, 99313500.00 ns, 6.2071 ms/op
WorkloadPilot    2: 32 op, 200538800.00 ns, 6.2668 ms/op
WorkloadPilot    3: 64 op, 395915800.00 ns, 6.1862 ms/op
WorkloadPilot    4: 128 op, 793696700.00 ns, 6.2008 ms/op

OverheadWarmup   1: 128 op, 1200.00 ns, 9.3750 ns/op
OverheadWarmup   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   3: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   4: 128 op, 700.00 ns, 5.4688 ns/op
OverheadWarmup   5: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   7: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   8: 128 op, 400.00 ns, 3.1250 ns/op

OverheadActual   1: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   3: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   5: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   7: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   8: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   9: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  10: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  11: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  12: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  13: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  14: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  15: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  16: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  17: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  18: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  19: 128 op, 1400.00 ns, 10.9375 ns/op
OverheadActual  20: 128 op, 800.00 ns, 6.2500 ns/op

WorkloadWarmup   1: 128 op, 787382400.00 ns, 6.1514 ms/op
WorkloadWarmup   2: 128 op, 790574700.00 ns, 6.1764 ms/op
WorkloadWarmup   3: 128 op, 787207800.00 ns, 6.1501 ms/op
WorkloadWarmup   4: 128 op, 786593700.00 ns, 6.1453 ms/op
WorkloadWarmup   5: 128 op, 790121100.00 ns, 6.1728 ms/op
WorkloadWarmup   6: 128 op, 787180700.00 ns, 6.1498 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 786936100.00 ns, 6.1479 ms/op
WorkloadActual   2: 128 op, 788131700.00 ns, 6.1573 ms/op
WorkloadActual   3: 128 op, 787225500.00 ns, 6.1502 ms/op
WorkloadActual   4: 128 op, 787323700.00 ns, 6.1510 ms/op
WorkloadActual   5: 128 op, 785254500.00 ns, 6.1348 ms/op
WorkloadActual   6: 128 op, 788129400.00 ns, 6.1573 ms/op
WorkloadActual   7: 128 op, 785866600.00 ns, 6.1396 ms/op
WorkloadActual   8: 128 op, 786576100.00 ns, 6.1451 ms/op
WorkloadActual   9: 128 op, 786451200.00 ns, 6.1441 ms/op
WorkloadActual  10: 128 op, 786496400.00 ns, 6.1445 ms/op
WorkloadActual  11: 128 op, 787764200.00 ns, 6.1544 ms/op
WorkloadActual  12: 128 op, 788114400.00 ns, 6.1571 ms/op
WorkloadActual  13: 128 op, 786468200.00 ns, 6.1443 ms/op
WorkloadActual  14: 128 op, 787599700.00 ns, 6.1531 ms/op
WorkloadActual  15: 128 op, 786523100.00 ns, 6.1447 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 786935650.00 ns, 6.1479 ms/op
WorkloadResult   2: 128 op, 788131250.00 ns, 6.1573 ms/op
WorkloadResult   3: 128 op, 787225050.00 ns, 6.1502 ms/op
WorkloadResult   4: 128 op, 787323250.00 ns, 6.1510 ms/op
WorkloadResult   5: 128 op, 785254050.00 ns, 6.1348 ms/op
WorkloadResult   6: 128 op, 788128950.00 ns, 6.1573 ms/op
WorkloadResult   7: 128 op, 785866150.00 ns, 6.1396 ms/op
WorkloadResult   8: 128 op, 786575650.00 ns, 6.1451 ms/op
WorkloadResult   9: 128 op, 786450750.00 ns, 6.1441 ms/op
WorkloadResult  10: 128 op, 786495950.00 ns, 6.1445 ms/op
WorkloadResult  11: 128 op, 787763750.00 ns, 6.1544 ms/op
WorkloadResult  12: 128 op, 788113950.00 ns, 6.1571 ms/op
WorkloadResult  13: 128 op, 786467750.00 ns, 6.1443 ms/op
WorkloadResult  14: 128 op, 787599250.00 ns, 6.1531 ms/op
WorkloadResult  15: 128 op, 786522650.00 ns, 6.1447 ms/op

// AfterAll
// Benchmark Process 27476 has exited with code 0.

Mean = 6.148 ms, StdErr = 0.002 ms (0.03%), N = 15, StdDev = 0.007 ms
Min = 6.135 ms, Q1 = 6.144 ms, Median = 6.148 ms, Q3 = 6.154 ms, Max = 6.157 ms
IQR = 0.009 ms, LowerFence = 6.130 ms, UpperFence = 6.168 ms
ConfidenceInterval = [6.141 ms; 6.156 ms] (CI 99.9%), Margin = 0.007 ms (0.12% of Mean)
Skewness = -0.22, Kurtosis = 1.96, MValue = 2

// **************************
// Benchmark: QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "d6cff74b-1306-427f-8ac7-590914f0ed3d.dll" --benchmarkName "Benchmarks.QuickSortTuning.Mine(Size: 100000, Order: Random)" --job "Default" --benchmarkId 1 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\d6cff74b-1306-427f-8ac7-590914f0ed3d\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 148400.00 ns, 148.4000 us/op
WorkloadJitting  1: 1 op, 26428900.00 ns, 26.4289 ms/op

OverheadJitting  2: 16 op, 177400.00 ns, 11.0875 us/op
WorkloadJitting  2: 16 op, 103944400.00 ns, 6.4965 ms/op

WorkloadPilot    1: 16 op, 103006700.00 ns, 6.4379 ms/op
WorkloadPilot    2: 32 op, 206276900.00 ns, 6.4462 ms/op
WorkloadPilot    3: 64 op, 412455300.00 ns, 6.4446 ms/op
WorkloadPilot    4: 128 op, 825779800.00 ns, 6.4514 ms/op

OverheadWarmup   1: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadWarmup   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   3: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   5: 128 op, 700.00 ns, 5.4688 ns/op
OverheadWarmup   6: 128 op, 1000.00 ns, 7.8125 ns/op
OverheadWarmup   7: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   8: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   9: 128 op, 500.00 ns, 3.9062 ns/op

OverheadActual   1: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   3: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   5: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   6: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   7: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   8: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   9: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  10: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  11: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  12: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  13: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  14: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  15: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  16: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  17: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  18: 128 op, 1300.00 ns, 10.1562 ns/op
OverheadActual  19: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  20: 128 op, 400.00 ns, 3.1250 ns/op

WorkloadWarmup   1: 128 op, 823600800.00 ns, 6.4344 ms/op
WorkloadWarmup   2: 128 op, 824112500.00 ns, 6.4384 ms/op
WorkloadWarmup   3: 128 op, 827467500.00 ns, 6.4646 ms/op
WorkloadWarmup   4: 128 op, 824457300.00 ns, 6.4411 ms/op
WorkloadWarmup   5: 128 op, 823583100.00 ns, 6.4342 ms/op
WorkloadWarmup   6: 128 op, 825051700.00 ns, 6.4457 ms/op
WorkloadWarmup   7: 128 op, 824124100.00 ns, 6.4385 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 823608300.00 ns, 6.4344 ms/op
WorkloadActual   2: 128 op, 825706100.00 ns, 6.4508 ms/op
WorkloadActual   3: 128 op, 825063900.00 ns, 6.4458 ms/op
WorkloadActual   4: 128 op, 824350600.00 ns, 6.4402 ms/op
WorkloadActual   5: 128 op, 823525700.00 ns, 6.4338 ms/op
WorkloadActual   6: 128 op, 825858000.00 ns, 6.4520 ms/op
WorkloadActual   7: 128 op, 823859400.00 ns, 6.4364 ms/op
WorkloadActual   8: 128 op, 824165500.00 ns, 6.4388 ms/op
WorkloadActual   9: 128 op, 824974100.00 ns, 6.4451 ms/op
WorkloadActual  10: 128 op, 823200000.00 ns, 6.4313 ms/op
WorkloadActual  11: 128 op, 823429200.00 ns, 6.4330 ms/op
WorkloadActual  12: 128 op, 824683200.00 ns, 6.4428 ms/op
WorkloadActual  13: 128 op, 823560200.00 ns, 6.4341 ms/op
WorkloadActual  14: 128 op, 824349400.00 ns, 6.4402 ms/op
WorkloadActual  15: 128 op, 823936300.00 ns, 6.4370 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 823607800.00 ns, 6.4344 ms/op
WorkloadResult   2: 128 op, 825705600.00 ns, 6.4508 ms/op
WorkloadResult   3: 128 op, 825063400.00 ns, 6.4458 ms/op
WorkloadResult   4: 128 op, 824350100.00 ns, 6.4402 ms/op
WorkloadResult   5: 128 op, 823525200.00 ns, 6.4338 ms/op
WorkloadResult   6: 128 op, 825857500.00 ns, 6.4520 ms/op
WorkloadResult   7: 128 op, 823858900.00 ns, 6.4364 ms/op
WorkloadResult   8: 128 op, 824165000.00 ns, 6.4388 ms/op
WorkloadResult   9: 128 op, 824973600.00 ns, 6.4451 ms/op
WorkloadResult  10: 128 op, 823199500.00 ns, 6.4312 ms/op
WorkloadResult  11: 128 op, 823428700.00 ns, 6.4330 ms/op
WorkloadResult  12: 128 op, 824682700.00 ns, 6.4428 ms/op
WorkloadResult  13: 128 op, 823559700.00 ns, 6.4341 ms/op
WorkloadResult  14: 128 op, 824348900.00 ns, 6.4402 ms/op
WorkloadResult  15: 128 op, 823935800.00 ns, 6.4370 ms/op

// AfterAll
// Benchmark Process 11000 has exited with code 0.

Mean = 6.440 ms, StdErr = 0.002 ms (0.03%), N = 15, StdDev = 0.006 ms
Min = 6.431 ms, Q1 = 6.434 ms, Median = 6.439 ms, Q3 = 6.444 ms, Max = 6.452 ms
IQR = 0.010 ms, LowerFence = 6.420 ms, UpperFence = 6.459 ms
ConfidenceInterval = [6.433 ms; 6.447 ms] (CI 99.9%), Margin = 0.007 ms (0.11% of Mean)
Skewness = 0.53, Kurtosis = 1.96, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.html

// * Detailed results *
QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.148 ms, StdErr = 0.002 ms (0.03%), N = 15, StdDev = 0.007 ms
Min = 6.135 ms, Q1 = 6.144 ms, Median = 6.148 ms, Q3 = 6.154 ms, Max = 6.157 ms
IQR = 0.009 ms, LowerFence = 6.130 ms, UpperFence = 6.168 ms
ConfidenceInterval = [6.141 ms; 6.156 ms] (CI 99.9%), Margin = 0.007 ms (0.12% of Mean)
Skewness = -0.22, Kurtosis = 1.96, MValue = 2
-------------------- Histogram --------------------
[6.131 ms ; 6.161 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.440 ms, StdErr = 0.002 ms (0.03%), N = 15, StdDev = 0.006 ms
Min = 6.431 ms, Q1 = 6.434 ms, Median = 6.439 ms, Q3 = 6.444 ms, Max = 6.452 ms
IQR = 0.010 ms, LowerFence = 6.420 ms, UpperFence = 6.459 ms
ConfidenceInterval = [6.433 ms; 6.447 ms] (CI 99.9%), Margin = 0.007 ms (0.11% of Mean)
Skewness = 0.53, Kurtosis = 1.96, MValue = 2
-------------------- Histogram --------------------
[6.428 ms ; 6.455 ms) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19043.1348 (21H1/May2021Update)
AMD Ryzen 5 3600, 1 CPU, 12 logical and 6 physical cores
.NET SDK=5.0.300
  [Host]     : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
  DefaultJob : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT


|  Method |   Size |  Order |     Mean |     Error |    StdDev | Ratio |
|-------- |------- |------- |---------:|----------:|----------:|------:|
| Default | 100000 | Random | 6.148 ms | 0.0072 ms | 0.0068 ms |  1.00 |
|    Mine | 100000 | Random | 6.440 ms | 0.0069 ms | 0.0064 ms |  1.05 |

// * Legends *
  Size   : Value of the 'Size' parameter
  Order  : Value of the 'Order' parameter
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Ratio  : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:38 (38.77 sec), executed benchmarks: 2

Global total time: 00:00:55 (55.29 sec), executed benchmarks: 2
// * Artifacts cleanup *
