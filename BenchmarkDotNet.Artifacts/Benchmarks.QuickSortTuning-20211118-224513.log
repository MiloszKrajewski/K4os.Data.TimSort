// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
Unable to find .sln or .csproj file. Will use current directory D:\Projects\K4os.Data.TimSort to search for project file. If you don't use .sln file on purpose it should not be a problem.
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\90b49dd4-7c15-43a3-b7e9-f957b21e41e2
// command took 1.08s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\90b49dd4-7c15-43a3-b7e9-f957b21e41e2
// command took 13.51s and exited with 1
// start dotnet build -c Release  --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\90b49dd4-7c15-43a3-b7e9-f957b21e41e2
// command took 1.98s and exited with 0
// ***** Done, took 00:00:16 (16.64 sec)   *****
// Found 2 benchmarks:
//   QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
//   QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]

// **************************
// Benchmark: QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "90b49dd4-7c15-43a3-b7e9-f957b21e41e2.dll" --benchmarkName "Benchmarks.QuickSortTuning.Default(Size: 100000, Order: Random)" --job "Default" --benchmarkId 0 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\90b49dd4-7c15-43a3-b7e9-f957b21e41e2\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 158900.00 ns, 158.9000 us/op
WorkloadJitting  1: 1 op, 6891300.00 ns, 6.8913 ms/op

OverheadJitting  2: 16 op, 243400.00 ns, 15.2125 us/op
WorkloadJitting  2: 16 op, 101625600.00 ns, 6.3516 ms/op

WorkloadPilot    1: 16 op, 99166700.00 ns, 6.1979 ms/op
WorkloadPilot    2: 32 op, 201346200.00 ns, 6.2921 ms/op
WorkloadPilot    3: 64 op, 398373500.00 ns, 6.2246 ms/op
WorkloadPilot    4: 128 op, 792048700.00 ns, 6.1879 ms/op

OverheadWarmup   1: 128 op, 1100.00 ns, 8.5938 ns/op
OverheadWarmup   2: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   3: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   4: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   5: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   6: 128 op, 700.00 ns, 5.4688 ns/op
OverheadWarmup   7: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   8: 128 op, 600.00 ns, 4.6875 ns/op

OverheadActual   1: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   3: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   5: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   7: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   8: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   9: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  10: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  11: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  12: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  13: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  14: 128 op, 300.00 ns, 2.3438 ns/op
OverheadActual  15: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  16: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  17: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  18: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  19: 128 op, 1100.00 ns, 8.5938 ns/op
OverheadActual  20: 128 op, 500.00 ns, 3.9062 ns/op

WorkloadWarmup   1: 128 op, 790009100.00 ns, 6.1719 ms/op
WorkloadWarmup   2: 128 op, 789319200.00 ns, 6.1666 ms/op
WorkloadWarmup   3: 128 op, 789151500.00 ns, 6.1652 ms/op
WorkloadWarmup   4: 128 op, 788249300.00 ns, 6.1582 ms/op
WorkloadWarmup   5: 128 op, 790142200.00 ns, 6.1730 ms/op
WorkloadWarmup   6: 128 op, 788770900.00 ns, 6.1623 ms/op
WorkloadWarmup   7: 128 op, 788731200.00 ns, 6.1620 ms/op
WorkloadWarmup   8: 128 op, 792118800.00 ns, 6.1884 ms/op
WorkloadWarmup   9: 128 op, 787479200.00 ns, 6.1522 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 787253300.00 ns, 6.1504 ms/op
WorkloadActual   2: 128 op, 788156000.00 ns, 6.1575 ms/op
WorkloadActual   3: 128 op, 786983300.00 ns, 6.1483 ms/op
WorkloadActual   4: 128 op, 794539800.00 ns, 6.2073 ms/op
WorkloadActual   5: 128 op, 791605400.00 ns, 6.1844 ms/op
WorkloadActual   6: 128 op, 792862200.00 ns, 6.1942 ms/op
WorkloadActual   7: 128 op, 787596500.00 ns, 6.1531 ms/op
WorkloadActual   8: 128 op, 787454600.00 ns, 6.1520 ms/op
WorkloadActual   9: 128 op, 788151900.00 ns, 6.1574 ms/op
WorkloadActual  10: 128 op, 788243100.00 ns, 6.1581 ms/op
WorkloadActual  11: 128 op, 788047700.00 ns, 6.1566 ms/op
WorkloadActual  12: 128 op, 786407300.00 ns, 6.1438 ms/op
WorkloadActual  13: 128 op, 787109800.00 ns, 6.1493 ms/op
WorkloadActual  14: 128 op, 786833100.00 ns, 6.1471 ms/op
WorkloadActual  15: 128 op, 787198900.00 ns, 6.1500 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 787252800.00 ns, 6.1504 ms/op
WorkloadResult   2: 128 op, 788155500.00 ns, 6.1575 ms/op
WorkloadResult   3: 128 op, 786982800.00 ns, 6.1483 ms/op
WorkloadResult   4: 128 op, 787596000.00 ns, 6.1531 ms/op
WorkloadResult   5: 128 op, 787454100.00 ns, 6.1520 ms/op
WorkloadResult   6: 128 op, 788151400.00 ns, 6.1574 ms/op
WorkloadResult   7: 128 op, 788242600.00 ns, 6.1581 ms/op
WorkloadResult   8: 128 op, 788047200.00 ns, 6.1566 ms/op
WorkloadResult   9: 128 op, 786406800.00 ns, 6.1438 ms/op
WorkloadResult  10: 128 op, 787109300.00 ns, 6.1493 ms/op
WorkloadResult  11: 128 op, 786832600.00 ns, 6.1471 ms/op
WorkloadResult  12: 128 op, 787198400.00 ns, 6.1500 ms/op

// AfterAll
// Benchmark Process 15520 has exited with code 0.

Mean = 6.152 ms, StdErr = 0.001 ms (0.02%), N = 12, StdDev = 0.005 ms
Min = 6.144 ms, Q1 = 6.149 ms, Median = 6.151 ms, Q3 = 6.157 ms, Max = 6.158 ms
IQR = 0.008 ms, LowerFence = 6.137 ms, UpperFence = 6.168 ms
ConfidenceInterval = [6.146 ms; 6.158 ms] (CI 99.9%), Margin = 0.006 ms (0.10% of Mean)
Skewness = -0.06, Kurtosis = 1.6, MValue = 2

// **************************
// Benchmark: QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "90b49dd4-7c15-43a3-b7e9-f957b21e41e2.dll" --benchmarkName "Benchmarks.QuickSortTuning.Mine(Size: 100000, Order: Random)" --job "Default" --benchmarkId 1 in D:\Projects\K4os.Data.TimSort\src\Benchmarks\bin\release\net5\90b49dd4-7c15-43a3-b7e9-f957b21e41e2\bin\Release\net5.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 158800.00 ns, 158.8000 us/op
WorkloadJitting  1: 1 op, 25397100.00 ns, 25.3971 ms/op

OverheadJitting  2: 16 op, 180900.00 ns, 11.3063 us/op
WorkloadJitting  2: 16 op, 105905100.00 ns, 6.6191 ms/op

WorkloadPilot    1: 16 op, 105395200.00 ns, 6.5872 ms/op
WorkloadPilot    2: 32 op, 210673000.00 ns, 6.5835 ms/op
WorkloadPilot    3: 64 op, 421489800.00 ns, 6.5858 ms/op
WorkloadPilot    4: 128 op, 836534700.00 ns, 6.5354 ms/op

OverheadWarmup   1: 128 op, 1600.00 ns, 12.5000 ns/op
OverheadWarmup   2: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   3: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   4: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   5: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   6: 128 op, 600.00 ns, 4.6875 ns/op
OverheadWarmup   7: 128 op, 500.00 ns, 3.9062 ns/op
OverheadWarmup   8: 128 op, 400.00 ns, 3.1250 ns/op
OverheadWarmup   9: 128 op, 600.00 ns, 4.6875 ns/op

OverheadActual   1: 128 op, 700.00 ns, 5.4688 ns/op
OverheadActual   2: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   3: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   4: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   5: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   6: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual   7: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual   8: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual   9: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  10: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  11: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  12: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  13: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  14: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  15: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  16: 128 op, 400.00 ns, 3.1250 ns/op
OverheadActual  17: 128 op, 500.00 ns, 3.9062 ns/op
OverheadActual  18: 128 op, 1000.00 ns, 7.8125 ns/op
OverheadActual  19: 128 op, 600.00 ns, 4.6875 ns/op
OverheadActual  20: 128 op, 400.00 ns, 3.1250 ns/op

WorkloadWarmup   1: 128 op, 836457200.00 ns, 6.5348 ms/op
WorkloadWarmup   2: 128 op, 842130000.00 ns, 6.5791 ms/op
WorkloadWarmup   3: 128 op, 841872200.00 ns, 6.5771 ms/op
WorkloadWarmup   4: 128 op, 842707700.00 ns, 6.5837 ms/op
WorkloadWarmup   5: 128 op, 838049400.00 ns, 6.5473 ms/op
WorkloadWarmup   6: 128 op, 837867000.00 ns, 6.5458 ms/op

// BeforeActualRun
WorkloadActual   1: 128 op, 839911100.00 ns, 6.5618 ms/op
WorkloadActual   2: 128 op, 867737600.00 ns, 6.7792 ms/op
WorkloadActual   3: 128 op, 843907700.00 ns, 6.5930 ms/op
WorkloadActual   4: 128 op, 842736300.00 ns, 6.5839 ms/op
WorkloadActual   5: 128 op, 836722300.00 ns, 6.5369 ms/op
WorkloadActual   6: 128 op, 836973400.00 ns, 6.5389 ms/op
WorkloadActual   7: 128 op, 836734600.00 ns, 6.5370 ms/op
WorkloadActual   8: 128 op, 837711200.00 ns, 6.5446 ms/op
WorkloadActual   9: 128 op, 838704100.00 ns, 6.5524 ms/op
WorkloadActual  10: 128 op, 837357700.00 ns, 6.5419 ms/op
WorkloadActual  11: 128 op, 838058900.00 ns, 6.5473 ms/op
WorkloadActual  12: 128 op, 841404000.00 ns, 6.5735 ms/op
WorkloadActual  13: 128 op, 849704000.00 ns, 6.6383 ms/op
WorkloadActual  14: 128 op, 838161800.00 ns, 6.5481 ms/op
WorkloadActual  15: 128 op, 837251100.00 ns, 6.5410 ms/op

// AfterActualRun
WorkloadResult   1: 128 op, 839910600.00 ns, 6.5618 ms/op
WorkloadResult   2: 128 op, 843907200.00 ns, 6.5930 ms/op
WorkloadResult   3: 128 op, 842735800.00 ns, 6.5839 ms/op
WorkloadResult   4: 128 op, 836721800.00 ns, 6.5369 ms/op
WorkloadResult   5: 128 op, 836972900.00 ns, 6.5389 ms/op
WorkloadResult   6: 128 op, 836734100.00 ns, 6.5370 ms/op
WorkloadResult   7: 128 op, 837710700.00 ns, 6.5446 ms/op
WorkloadResult   8: 128 op, 838703600.00 ns, 6.5524 ms/op
WorkloadResult   9: 128 op, 837357200.00 ns, 6.5419 ms/op
WorkloadResult  10: 128 op, 838058400.00 ns, 6.5473 ms/op
WorkloadResult  11: 128 op, 841403500.00 ns, 6.5735 ms/op
WorkloadResult  12: 128 op, 838161300.00 ns, 6.5481 ms/op
WorkloadResult  13: 128 op, 837250600.00 ns, 6.5410 ms/op

// AfterAll
// Benchmark Process 14652 has exited with code 0.

Mean = 6.554 ms, StdErr = 0.005 ms (0.08%), N = 13, StdDev = 0.019 ms
Min = 6.537 ms, Q1 = 6.541 ms, Median = 6.547 ms, Q3 = 6.562 ms, Max = 6.593 ms
IQR = 0.021 ms, LowerFence = 6.510 ms, UpperFence = 6.593 ms
ConfidenceInterval = [6.532 ms; 6.576 ms] (CI 99.9%), Margin = 0.022 ms (0.34% of Mean)
Skewness = 0.92, Kurtosis = 2.31, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.csv
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report-github.md
  BenchmarkDotNet.Artifacts\results\Benchmarks.QuickSortTuning-report.html

// * Detailed results *
QuickSortTuning.Default: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.152 ms, StdErr = 0.001 ms (0.02%), N = 12, StdDev = 0.005 ms
Min = 6.144 ms, Q1 = 6.149 ms, Median = 6.151 ms, Q3 = 6.157 ms, Max = 6.158 ms
IQR = 0.008 ms, LowerFence = 6.137 ms, UpperFence = 6.168 ms
ConfidenceInterval = [6.146 ms; 6.158 ms] (CI 99.9%), Margin = 0.006 ms (0.10% of Mean)
Skewness = -0.06, Kurtosis = 1.6, MValue = 2
-------------------- Histogram --------------------
[6.141 ms ; 6.161 ms) | @@@@@@@@@@@@
---------------------------------------------------

QuickSortTuning.Mine: DefaultJob [Size=100000, Order=Random]
Runtime = .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT; GC = Concurrent Workstation
Mean = 6.554 ms, StdErr = 0.005 ms (0.08%), N = 13, StdDev = 0.019 ms
Min = 6.537 ms, Q1 = 6.541 ms, Median = 6.547 ms, Q3 = 6.562 ms, Max = 6.593 ms
IQR = 0.021 ms, LowerFence = 6.510 ms, UpperFence = 6.593 ms
ConfidenceInterval = [6.532 ms; 6.576 ms] (CI 99.9%), Margin = 0.022 ms (0.34% of Mean)
Skewness = 0.92, Kurtosis = 2.31, MValue = 2
-------------------- Histogram --------------------
[6.527 ms ; 6.603 ms) | @@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19043.1348 (21H1/May2021Update)
AMD Ryzen 5 3600, 1 CPU, 12 logical and 6 physical cores
.NET SDK=5.0.300
  [Host]     : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT
  DefaultJob : .NET 5.0.12 (5.0.1221.52207), X64 RyuJIT


|  Method |   Size |  Order |     Mean |     Error |    StdDev | Ratio |
|-------- |------- |------- |---------:|----------:|----------:|------:|
| Default | 100000 | Random | 6.152 ms | 0.0060 ms | 0.0047 ms |  1.00 |
|    Mine | 100000 | Random | 6.554 ms | 0.0223 ms | 0.0186 ms |  1.07 |

// * Hints *
Outliers
  QuickSortTuning.Default: Default -> 3 outliers were removed (6.18 ms..6.21 ms)
  QuickSortTuning.Mine: Default    -> 2 outliers were removed (6.64 ms, 6.78 ms)

// * Legends *
  Size   : Value of the 'Size' parameter
  Order  : Value of the 'Order' parameter
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Ratio  : Mean of the ratio distribution ([Current]/[Baseline])
  1 ms   : 1 Millisecond (0.001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:40 (40.78 sec), executed benchmarks: 2

Global total time: 00:00:57 (57.42 sec), executed benchmarks: 2
// * Artifacts cleanup *
